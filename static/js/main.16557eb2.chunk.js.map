{"version":3,"sources":["components/Nav.js","components/ProductList.js","helpers/basic-helpers.js","components/LoadingSpinner.js","views/Home.js","views/Cart.js","views/Popular.js","views/Upcoming.js","views/Product.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","loc","useLocation","isCurrentRoute","route","pathname","useState","transparentBg","setTransparentBg","changeNavBgColor","window","scrollY","useEffect","addEventListener","removeEventListener","className","to","ProductList","props","history","useHistory","list","map","product","onClick","productId","itemId","push","item","ratings","avgStars","store","isNew","src","images","icon","alt","name","cost","FetchItems","url","callback","fetch","then","response","json","data","catch","err","console","log","LoadingSpinner","Home","fetchProducts","products","setProducts","loading","setLoadingStatus","a","d","slice","length","Cart","style","color","fontSize","Popular","Upcoming","Product","fetchProduct","setProduct","match","params","id","description","totalPoints","numberVotes","type","rarity","itemSet","setName","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16557eb2.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport {Link, useLocation } from \"react-router-dom\";\r\nimport '../assets/styles/Nav.css';\r\n\r\n\r\nfunction Nav() {\r\n    const loc = useLocation();\r\n    function isCurrentRoute(route) {\r\n        return (route === loc.pathname ? true : false);\r\n    }\r\n\r\n    const [transparentBg, setTransparentBg] = useState(true);\r\n    const changeNavBgColor = () => {\r\n        if (window.scrollY > 50) {\r\n            setTransparentBg(false);\r\n        } else {\r\n            setTransparentBg(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', changeNavBgColor)\r\n        return () => {\r\n            window.removeEventListener('scroll', changeNavBgColor)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <nav className={ transparentBg ? 'bg-transparent' : 'bg-regular' }>\r\n            <div className=\"logo\">\r\n                <i><span className=\"highlighted\">toy</span>Shop</i>\r\n            </div>\r\n            <ul className=\"nav-links\">\r\n                <Link to=\"/\" className=\"link-name\">\r\n                    <li className={ isCurrentRoute('/') ? 'active' : 'in-active' }>\r\n                        Home\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/popular\" className=\"link-name\">\r\n                    <li className={ isCurrentRoute('/popular') ? 'active' : 'in-active' }>\r\n                        Popular\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/upcoming\" className=\"link-name\">\r\n                    <li className={ isCurrentRoute('/upcoming') ? 'active' : 'in-active' }>\r\n                        Upcoming\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/cart\" className=\"link-name\">\r\n                    <li className={ isCurrentRoute('/cart') ? 'active' : 'in-active' }>\r\n                        Cart\r\n                    </li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport '../assets/styles/ProductList.css'\r\n\r\n\r\nfunction ProductList(props) {\r\n    const history = useHistory();\r\n\r\n    function goToProductPage(productId) {\r\n        history.push(`/product/${productId}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            {\r\n                props.list.map(product => (\r\n                    <div className=\"card\" key={product.itemId} onClick={() => goToProductPage(product.itemId)}>\r\n                        <div className=\"card-header\">\r\n                            <div className=\"rating-container\">\r\n                                <div className=\"star\">&nbsp;</div>\r\n                                <div className=\"rating\">\r\n                                    {product.item.ratings.avgStars}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ribbon-container\">\r\n                                {\r\n                                    product.store ? (\r\n                                        !product.store.isNew ? (\r\n                                            <div className=\"ribbon\"><span>New</span></div>\r\n                                        ): (\r\n                                            <div>&nbsp;</div>\r\n                                        )\r\n                                    ): (\r\n                                        <div>&nbsp;</div>\r\n                                    )\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                        <img src={product.item.images.icon} alt=\"Avatar\" className=\"card-img\" />\r\n                        <div className=\"card-content\">\r\n                            <h3><b>{product.item.name}</b></h3>\r\n                            {\r\n                                product.store ? (\r\n                                    <p>$ {product.store.cost} (USD)</p>\r\n                                ): (\r\n                                    <p>$ {product.item.cost} (USD)</p>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductList;\r\n","export function FetchItems(url, callback) {\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => callback(data))\r\n        .catch(err => console.log(err));\r\n}","import '../assets/styles/LoadingSpinner.css'\r\n\r\nfunction LoadingSpinner() {\r\n    return (\r\n        <div className=\"loader-container flex-container\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import {useState, useEffect} from 'react'\r\nimport ProductList from \"../components/ProductList\";\r\nimport {FetchItems} from \"../helpers/basic-helpers\"\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\n\r\nfunction Home() {\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const [products, setProducts] = useState([]);\r\n    let [loading, setLoadingStatus] = useState(false);\r\n\r\n    const fetchProducts = async () => {\r\n        setLoadingStatus(true);\r\n        FetchItems('https://fortnite-api.theapinetwork.com/store/get', (d => {\r\n            //console.log(\"All Products : \", d.data.slice(0, 50));\r\n            setProducts(d.data.slice(0, 50));\r\n            setLoadingStatus(false);\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? (\r\n                    <LoadingSpinner />\r\n                ) : (\r\n                    products.length ? (\r\n                        <ProductList list={products} />\r\n                    ) : (\r\n                        <h2>No products to show</h2>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","function Cart() {\r\n    return (\r\n        <div>\r\n            <h1>This page is under <span style={{color: \"yellow\", fontSize: \"3rem\"}}>construction!</span></h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n","import {useState, useEffect} from 'react'\r\nimport ProductList from \"../components/ProductList\";\r\nimport {FetchItems} from \"../helpers/basic-helpers\"\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\n\r\nfunction Popular() {\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const [products, setProducts] = useState([]);\r\n    let [loading, setLoadingStatus] = useState(false);\r\n\r\n    const fetchProducts = async () => {\r\n        setLoadingStatus(true);\r\n        FetchItems('https://fortnite-api.theapinetwork.com/items/list', (d => {\r\n            //console.log(\"Popular Products : \", d.data);\r\n            setProducts(d.data.slice(0, 50));\r\n            setLoadingStatus(false);\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            {\r\n                loading ? (\r\n                    <LoadingSpinner />\r\n                ) : (\r\n                    products.length ? (\r\n                        <ProductList list={products} />\r\n                    ) : (\r\n                        <h2>No products to show</h2>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popular;\r\n","import {useState, useEffect} from 'react'\r\nimport ProductList from \"../components/ProductList\";\r\nimport {FetchItems} from \"../helpers/basic-helpers\"\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\n\r\nfunction Upcoming() {\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const [products, setProducts] = useState([]);\r\n    let [loading, setLoadingStatus] = useState(false);\r\n\r\n    const fetchProducts = async () => {\r\n        setLoadingStatus(true);\r\n        FetchItems('https://fortnite-api.theapinetwork.com/upcoming/get', (d => {\r\n            //console.log(\"Upcoming Products : \", d.data);\r\n            setProducts(d.data.slice(0, 50));\r\n            setLoadingStatus(false);\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            {\r\n                loading ? (\r\n                    <LoadingSpinner />\r\n                ) : (\r\n                    products.length ? (\r\n                        <ProductList list={products} />\r\n                    ) : (\r\n                        <h2>No products to show</h2>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Upcoming;\r\n","import {useState, useEffect} from 'react'\r\nimport {FetchItems} from \"../helpers/basic-helpers\"\r\nimport '../assets/styles/Product.css'\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\n\r\nfunction Product(props) {\r\n    useEffect(() => {\r\n        fetchProduct();\r\n    }, []);\r\n\r\n    const [product, setProduct] = useState({});\r\n    let [loading, setLoadingStatus] = useState(false);\r\n\r\n    const fetchProduct = async () => {\r\n        setLoadingStatus(true);\r\n        FetchItems(`https://fortnite-api.theapinetwork.com/item/get?id=${props.match.params.id}`, (d => {\r\n            //console.log(\"Product : \", d.data);\r\n            setProduct(d.data);\r\n            setLoadingStatus(false);\r\n        }));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? (\r\n                    <LoadingSpinner />\r\n                ) : (\r\n                    product.item? (\r\n                        <div className=\"product-container flex-container\">\r\n                            <div className=\"product-container-item\">\r\n                                <h1 className=\"product-name\">{product.item.name}</h1>\r\n                                <img src={product.item.images.icon} alt=\"Avatar\" className=\"product-img\" />\r\n                                <h3><i>\"{product.item.description}...\"</i></h3>\r\n                            </div>\r\n                            <div className=\"product-container-item\">\r\n                                <div className=\"flex-container\">\r\n                                    <table className=\"product-info-table\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Rating</th>\r\n                                            <th>Point</th>\r\n                                            <th>Vote</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td>{product.item.ratings.avgStars}</td>\r\n                                            <td>{product.item.ratings.totalPoints}</td>\r\n                                            <td>{product.item.ratings.numberVotes}</td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"tag-container flex-container\">\r\n                                    <div className=\"tag\">{product.item.type}</div>\r\n                                    <div className=\"tag\">{product.item.rarity}</div>\r\n                                    {\r\n                                        product.itemSet.setName ? (\r\n                                            <div className=\"tag\">{product.itemSet.setName}</div>\r\n                                        ) : (\r\n                                            <div>&nbsp;</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"bottom-container flex-container\">\r\n                                    <div className=\"bottom-wrapper flex-container\">\r\n                                        <div className=\"product-price\">$ {product.item.cost} (USD)</div>\r\n                                        <div>\r\n                                            <button className=\"action-button\">ADD TO CART</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ): (\r\n                        <div>No product to show</div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n","import './App.css';\nimport Nav from \"./components/Nav\";\nimport Home from \"./views/Home\";\nimport Cart from \"./views/Cart\";\nimport Popular from \"./views/Popular\";\nimport Upcoming from \"./views/Upcoming\";\nimport Product from \"./views/Product\";\n\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <Router>\n          <div className=\"App\">\n              <Nav />\n              <Switch>\n                  <Route path=\"/\" exact component={Home} />\n                  <Route path=\"/cart\" component={Cart} />\n                  <Route path=\"/popular\" component={Popular} />\n                  <Route path=\"/upcoming\" component={Upcoming} />\n                  <Route path=\"/product/:id\" component={Product} />\n              </Switch>\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}