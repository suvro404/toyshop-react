{"version":3,"sources":["context/CartContext.js","helpers/basic-helpers.js","context/AuthContext.js","components/Nav.js","components/ProductList.js","components/LoadingSpinner.js","context/ProductsContextApi.js","views/Home.js","views/Popular.js","views/Upcoming.js","components/CartModal.js","components/WarningModal.js","views/Product.js","components/CheckoutModal.js","views/Cart.js","components/AuthMsgModal.js","views/Auth.js","views/Test.js","App.js","reportWebVitals.js","index.js"],"names":["CartContext","createContext","CartContextProvider","cartList","children","useState","cart","setCart","Provider","value","useCart","useContext","FetchItems","url","callback","fetch","then","response","json","data","catch","err","console","log","AuthContext","AuthContextProvider","status","authorized","setAuthorized","credential","setCredential","actionName","setActionName","loading","setLoading","authMsg","setAuthMsg","authenticateUser","queryData","method","headers","body","JSON","stringify","email","password","Authenticate","apiPrefix","d","token","id","useAuth","obj","Object","keys","length","values","every","x","Nav","loc","useLocation","transparentBg","setTransparentBg","isCurrentRoute","route","pathname","changeNavBgColor","window","scrollY","useEffect","addEventListener","removeEventListener","className","to","process","onClick","ProductList","props","history","useHistory","list","map","product","productId","itemId","push","item","ratings","avgStars","store","isNew","src","images","icon","alt","name","cost","LoadingSpinner","ProductsContextApi","ProductsContextProvider","productType","products","setProducts","pType","setProductType","getApiUrl","slice","useProductsApi","Home","Popular","Upcoming","CartModal","price","noOfItems","setNoOfItems","totalPrice","Number","closeModal","onClose","currentCart","productToAdd","a","productExists","parse","splice","getIndexOfExistingProduct","filter","p","findIndex","getProductQuantity","totalQuantity","forEach","getGrossPrice","grossPrice","changeItemNo","action","cartProduct","quantity","updateCart","WarningModal","Product","setProduct","setLoadingStatus","modalShow","setModalShow","warningModalShow","setWarningModalShow","fetchProduct","match","params","description","totalPoints","numberVotes","type","rarity","itemSet","setName","CheckoutModal","date","Date","getMonth","getDate","getFullYear","getTodayDate","Cart","getPositionOfProductInCart","removeProductFromCart","colSpan","reduce","sum","AuthMsgModal","onRemoveModal","msg","Auth","emailRef","createRef","passwordRef","authType","setAuthType","changeAuthType","submit","getActionName","autoComplete","ref","node","Test","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99ef71ef.chunk.js","sourcesContent":["import {useState, createContext, useContext, useEffect} from 'react';\r\n\r\nconst CartContext = createContext(null);\r\n\r\nexport const CartContextProvider = ({cartList, children}) => {\r\n    const [cart, setCart] = useState(cartList);\r\n\r\n    return (\r\n        <CartContext.Provider value={{cart, setCart}}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useCart = () => useContext(CartContext);","export function FetchItems(url, callback) {\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => callback(data))\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport function Authenticate(url, queryData, callback) {\r\n    fetch(url,{\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({email: queryData.credential.email, password: queryData.credential.password})\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => callback(data))\r\n        .catch(err => console.log(\"error : \", err));\r\n}","import {useState, createContext, useContext, useEffect} from 'react';\r\nimport {Authenticate, FetchItems} from \"../helpers/basic-helpers\";\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nconst apiPrefix = 'https://reqres.in';\r\n\r\nexport const AuthContextProvider = ({status, children}) => {\r\n    const [authorized, setAuthorized] = useState(status);\r\n    const [credential, setCredential] = useState({});\r\n    const [actionName, setActionName] = useState('login');\r\n    const [loading, setLoading] = useState(false);\r\n    const [authMsg, setAuthMsg] = useState('');\r\n\r\n    return (\r\n        <AuthContext.Provider value={{authorized, setAuthorized, credential, actionName, setCredential, setActionName, loading, setLoading, authMsg, setAuthMsg}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nfunction authenticateUser(credential, actionName, setAuthorized, setLoading, setAuthMsg, authMsg, setCredential) {\r\n    let url = apiPrefix + \"/api/\"+ actionName;\r\n    Authenticate(url, credential, (d => {\r\n        setLoading(false);\r\n        //actionName === 'login' ? (d.token ? setAuthorized(true) : setAuthorized(false)):(setAuthorized(false));\r\n        if(actionName === 'login') {\r\n            if(d.token) {\r\n                setAuthorized(true);\r\n                setAuthMsg('Log in successful!');\r\n            } else {\r\n                setAuthMsg('Log in failed!');\r\n            }\r\n        } else {\r\n            if(d.id) {\r\n                setAuthMsg('Sign Up Successful. Please log in to continue.');\r\n            } else {\r\n                setAuthMsg('Sign Up failed!');\r\n            }\r\n        }\r\n    }));\r\n}\r\n\r\nfunction isValidObj(obj) {\r\n    return ((typeof obj === 'object' && Object.keys(obj).length && Object.values(obj).every(x => x != null && x !== '')));\r\n}\r\n\r\nexport const useAuth = () => {\r\n    let {credential, actionName, setAuthorized, setLoading, setAuthMsg, authMsg, setCredential} = useContext(AuthContext);\r\n    isValidObj(credential) ? authenticateUser(credential, actionName, setAuthorized, setLoading, setAuthMsg, authMsg, setCredential) : console.log(\"credential not valid\");\r\n    return useContext(AuthContext);\r\n};","import { useEffect, useState } from 'react'\r\nimport {Link, useLocation } from \"react-router-dom\";\r\nimport '../assets/styles/Nav.css';\r\nimport {useCart} from \"../context/CartContext\";\r\nimport {useAuth} from \"../context/AuthContext\"\r\n\r\nfunction Nav() {\r\n    const loc = useLocation();\r\n    const [transparentBg, setTransparentBg] = useState(true);\r\n    const {cart, setCart} = useCart();\r\n    const {authorized, setAuthorized, setCredential} = useAuth();\r\n\r\n    //console.log(\"authorized : \", authorized);\r\n\r\n    function isCurrentRoute(route) {\r\n        return (route === loc.pathname ? true : false);\r\n    }\r\n\r\n    const changeNavBgColor = () => {\r\n        if (window.scrollY > 50) {\r\n            setTransparentBg(false);\r\n        } else {\r\n            setTransparentBg(true);\r\n        }\r\n    }\r\n\r\n    function logout() {\r\n        setAuthorized(false);\r\n        setCredential({});\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', changeNavBgColor)\r\n        return () => {\r\n            window.removeEventListener('scroll', changeNavBgColor)\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <nav className={ transparentBg ? 'bg-transparent' : 'bg-regular' }>\r\n            <div className=\"logo\">\r\n                <i><span className=\"highlighted\">toy</span>Shop</i>\r\n            </div>\r\n            <ul className=\"nav-links\">\r\n                <Link to={process.env.PUBLIC_URL + '/'} className=\"link-name\">\r\n                    <li className={ isCurrentRoute('/') ? 'active' : 'in-active' }>\r\n                        Home\r\n                    </li>\r\n                </Link>\r\n                <Link to={process.env.PUBLIC_URL + '/popular'} className=\"link-name\">\r\n                    <li className={ isCurrentRoute('/popular') ? 'active' : 'in-active' }>\r\n                        Popular\r\n                    </li>\r\n                </Link>\r\n                <Link to={process.env.PUBLIC_URL + '/upcoming'} className=\"link-name\">\r\n                    <li className={ isCurrentRoute('/upcoming') ? 'active' : 'in-active' }>\r\n                        Upcoming\r\n                    </li>\r\n                </Link>\r\n\r\n                {\r\n                    authorized ? (\r\n                        <div className=\"link-group\">\r\n                            <Link to={process.env.PUBLIC_URL + '/cart'} className=\"link-name\">\r\n                                <li className={ isCurrentRoute('/cart') ? 'active' : 'in-active' }>\r\n                                    Cart{cart && cart.length > 0 && <sup>{cart.length}</sup>}\r\n                                </li>\r\n                            </Link>\r\n                            <Link to={process.env.PUBLIC_URL + '/'} className=\"link-name\">\r\n                                <li className='in-active' onClick={() => logout()}>\r\n                                    Log Out\r\n                                </li>\r\n                            </Link>\r\n                        </div>\r\n                    ):(\r\n                        <Link to={process.env.PUBLIC_URL + '/auth'} className=\"link-name\">\r\n                            <li className={ isCurrentRoute('/auth') ? 'active' : 'in-active' }>\r\n                                Log In\r\n                            </li>\r\n                        </Link>\r\n                    )\r\n                }\r\n\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport '../assets/styles/ProductList.css';\r\n\r\nfunction ProductList(props) {\r\n    const history = useHistory();\r\n\r\n    function goToProductPage(productId) {\r\n        history.push(`${process.env.PUBLIC_URL}/product/${productId}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            {\r\n                props.list.map(product => (\r\n                    <div className=\"card\" key={product.itemId} onClick={() => goToProductPage(product.itemId)}>\r\n                        <div className=\"card-header\">\r\n                            <div className=\"rating-container\">\r\n                                <div className=\"star\">&nbsp;</div>\r\n                                <div className=\"rating\">\r\n                                    {product.item.ratings.avgStars}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ribbon-container\">\r\n                                {\r\n                                    product.store ? (\r\n                                        !product.store.isNew ? (\r\n                                            <div className=\"ribbon\"><span>New</span></div>\r\n                                        ): (\r\n                                            <div>&nbsp;</div>\r\n                                        )\r\n                                    ): (\r\n                                        <div>&nbsp;</div>\r\n                                    )\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                        <img src={product.item.images.icon} alt=\"Avatar\" className=\"card-img\" />\r\n                        <div className=\"card-content\">\r\n                            <h3><b>{product.item.name}</b></h3>\r\n                            {\r\n                                product.store ? (\r\n                                    <p>$ {product.store.cost} (USD)</p>\r\n                                ): (\r\n                                    <p>$ {product.item.cost} (USD)</p>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductList;\r\n","import '../assets/styles/LoadingSpinner.css'\r\n\r\nfunction LoadingSpinner() {\r\n    return (\r\n        <div className=\"loader-container flex-container\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, {useState, createContext, useContext, useEffect} from 'react';\r\nimport {FetchItems} from \"../helpers/basic-helpers\"\r\n\r\nconst apiPrefix = 'https://fortnite-api.theapinetwork.com';\r\n\r\nconst ProductsContextApi = createContext(null);\r\n\r\nexport const ProductsContextProvider = ({productType, children}) => {\r\n    const [products, setProducts] = useState(null);\r\n    const [pType, setProductType] = useState(productType);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const url = getApiUrl(pType);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        FetchItems(url, (d => {\r\n            setProducts(d.data.slice(0, 50));\r\n            setLoading(false);\r\n        }));\r\n\r\n    }, [url]);\r\n\r\n    return (\r\n        <ProductsContextApi.Provider value={{products: products, loading:loading, setProductType: setProductType}}>\r\n            {children}\r\n        </ProductsContextApi.Provider>\r\n    );\r\n}\r\n\r\nfunction getApiUrl(productType) {\r\n    switch (productType) {\r\n        case 'all': return apiPrefix + '/store/get';\r\n        case 'popular': return apiPrefix + '/items/list';\r\n        case 'upcoming': return apiPrefix + '/upcoming/get';\r\n\r\n        default: return \"\";\r\n    }\r\n}\r\n\r\nexport const useProductsApi = (productType) => {\r\n    const {products, setProductType, loading} = useContext(ProductsContextApi);\r\n    useEffect(() => {\r\n        setProductType(productType);\r\n    });\r\n    return {products, setProductType, loading};\r\n};","import ProductList from \"../components/ProductList\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport {useProductsApi} from \"../context/ProductsContextApi\";\r\n\r\nfunction Home() {\r\n    const {products, loading} = useProductsApi(\"all\");\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? (\r\n                    <LoadingSpinner />\r\n                ) : (\r\n                    products ? (\r\n                        products.length ? (\r\n                            <ProductList list={products} />\r\n                        ) : (\r\n                            <h2>No products to show</h2>\r\n                        )\r\n                    ):(\r\n                        <div>Products not found</div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import ProductList from \"../components/ProductList\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport {useProductsApi} from \"../context/ProductsContextApi\";\r\n\r\nfunction Popular() {\r\n    const {products, loading} = useProductsApi(\"popular\");\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? (\r\n                    <LoadingSpinner />\r\n                ) : (\r\n                    products ? (\r\n                        products.length ? (\r\n                            <ProductList list={products} />\r\n                        ) : (\r\n                            <h2>No products to show</h2>\r\n                        )\r\n                    ):(\r\n                        <div>Products not found</div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popular;\r\n","import ProductList from \"../components/ProductList\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport {useProductsApi} from \"../context/ProductsContextApi\";\r\n\r\nfunction Upcoming() {\r\n    const {products, loading} = useProductsApi(\"upcoming\");\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? (\r\n                    <LoadingSpinner />\r\n                ) : (\r\n                    products ? (\r\n                        products.length ? (\r\n                            <ProductList list={products} />\r\n                        ) : (\r\n                            <h2>No products to show</h2>\r\n                        )\r\n                    ):(\r\n                        <div>Products not found</div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Upcoming;\r\n","import '../assets/styles/CartModal.css';\r\nimport {useState} from 'react'\r\nimport {useCart} from \"../context/CartContext\";\r\n\r\nfunction CartModal(props) {\r\n    const {cart, setCart} = useCart();\r\n    const [noOfItems, setNoOfItems] = useState(1);\r\n    let totalPrice = noOfItems * getProductPrice(props.product.item.cost);\r\n\r\n    function closeModal() {\r\n        props.onClose();\r\n    }\r\n\r\n    function getProductPrice(price) {\r\n        return Number(price) > 0 ? Number(price) : 100;\r\n    }\r\n\r\n    function confirm() {\r\n        let cartProduct = {\r\n            product: props.product,\r\n            quantity: getProductQuantity(cart, props.product, noOfItems),\r\n            totalPrice: getGrossPrice(cart, props.product, totalPrice)\r\n        }\r\n\r\n        updateCart(cart, cartProduct);\r\n\r\n        closeModal();\r\n    }\r\n\r\n    async function updateCart(currentCart, productToAdd) {\r\n        currentCart = JSON.parse(JSON.stringify(currentCart));\r\n        //console.log(\"cart x : \", JSON.parse(JSON.stringify(currentCart)));\r\n\r\n        productExists(currentCart, productToAdd) ?\r\n            currentCart.splice(getIndexOfExistingProduct(currentCart, productToAdd), 1, productToAdd)\r\n            : currentCart.push(productToAdd);\r\n\r\n        setCart(currentCart);\r\n    }\r\n\r\n    function productExists(cart, product) {\r\n        return cart.filter(p => {\r\n            return (p.product.itemId === product.product.itemId);\r\n        }).length > 0;\r\n    }\r\n\r\n    function getIndexOfExistingProduct(cart, product) {\r\n        return cart.findIndex(p => p.product.itemId === product.product.itemId);\r\n    }\r\n\r\n    function getProductQuantity(cart, product, noOfItems) {\r\n        let totalQuantity = noOfItems;\r\n        cart.forEach((p) => {\r\n            totalQuantity = (p.itemId === product.itemId ? (totalQuantity + noOfItems) : noOfItems);\r\n        });\r\n\r\n        return totalQuantity;\r\n    }\r\n\r\n    function getGrossPrice(cart, product, totalPrice) {\r\n        let grossPrice = totalPrice;\r\n        cart.forEach((p) => {\r\n            grossPrice = (p.product.itemId === product.itemId ? (grossPrice + totalPrice) : totalPrice);\r\n        });\r\n        return grossPrice;\r\n    }\r\n\r\n    function changeItemNo(action) {\r\n        (action === 'add' ? setNoOfItems(noOfItems < 10 ? noOfItems+1 : 10): setNoOfItems(noOfItems > 1 ? noOfItems-1 : 1));\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content-container\">\r\n                <div className=\"flex-container\">\r\n                    <div>\r\n                        <h1 className=\"product-title\">{props.product.item.name}</h1>\r\n                        <img src={props.product.item.images.icon} alt=\"Avatar\" className=\"cart-product-img\" />\r\n                        <table className=\"purchase-table\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Item</th>\r\n                                <th>Price</th>\r\n                                <th>&nbsp;</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>{noOfItems}</td>\r\n                                <td>{totalPrice}</td>\r\n                                <td className=\"purchase-table-btn-container\">\r\n                                    <button className=\"purchase-table-btn\" onClick={() => changeItemNo('add')}>\r\n                                        +\r\n                                    </button>\r\n                                    <button className=\"purchase-table-btn\" onClick={() => changeItemNo('remove')}>\r\n                                        -\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button className=\"modal-action-button\" onClick={confirm}>CONFIRM</button>\r\n                    <button className=\"modal-action-button\" onClick={closeModal}>CANCEL</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartModal;\r\n","import '../assets/styles/WarningModal.css'\r\n\r\nfunction WarningModal(props) {\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content-container\">\r\n                <div className=\"flex-container\">\r\n                    <div>\r\n                        <h2>Please Log In to continue.</h2>\r\n                        <div>\r\n                            <button className=\"modal-close-button\" onClick={props.onClose}>OK</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WarningModal;","import {useState, useEffect} from 'react'\r\nimport {FetchItems} from \"../helpers/basic-helpers\"\r\nimport '../assets/styles/Product.css'\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport CartModal from \"../components/CartModal\";\r\nimport {useAuth} from \"../context/AuthContext\"\r\nimport WarningModal from \"../components/WarningModal\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction Product(props) {\r\n    const [product, setProduct] = useState({});\r\n    const [loading, setLoadingStatus] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [warningModalShow, setWarningModalShow] = useState(false);\r\n    const {authorized, setAuthorized} = useAuth();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        fetchProduct();\r\n    }, []);\r\n\r\n    const fetchProduct = async () => {\r\n        setLoadingStatus(true);\r\n        FetchItems(`https://fortnite-api.theapinetwork.com/item/get?id=${props.match.params.id}`, (d => {\r\n            //console.log(\"Product : \", d.data);\r\n            setProduct(d.data);\r\n            setLoadingStatus(false);\r\n        }));\r\n    }\r\n\r\n    const openModal = () => {\r\n        authorized ? (setModalShow(true)) : (setWarningModalShow(true));\r\n    };\r\n    const closeModal = ()=>{\r\n        setModalShow(false);\r\n    }\r\n\r\n    const closeWarningModal = () => {\r\n        setWarningModalShow(false);\r\n        history.push('/auth');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? (\r\n                    <LoadingSpinner />\r\n                ) : (\r\n                    product.item? (\r\n                            <div>\r\n                                <div className=\"product-container flex-container\">\r\n                                    <div className=\"product-container-item\">\r\n                                        <h1 className=\"product-name\">{product.item.name}</h1>\r\n                                        <img src={product.item.images.icon} alt=\"Avatar\" className=\"product-img\" />\r\n                                        <h3><i>\"{product.item.description}...\"</i></h3>\r\n                                    </div>\r\n                                    <div className=\"product-container-item\">\r\n                                        <div className=\"flex-container\">\r\n                                            <table className=\"product-info-table\">\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>Rating</th>\r\n                                                    <th>Point</th>\r\n                                                    <th>Vote</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td>{product.item.ratings.avgStars}</td>\r\n                                                    <td>{product.item.ratings.totalPoints}</td>\r\n                                                    <td>{product.item.ratings.numberVotes}</td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div className=\"tag-container flex-container\">\r\n                                            <div className=\"tag\">{product.item.type}</div>\r\n                                            <div className=\"tag\">{product.item.rarity}</div>\r\n                                            {\r\n                                                product.itemSet.setName ? (\r\n                                                    <div className=\"tag\">{product.itemSet.setName}</div>\r\n                                                ) : (\r\n                                                    <div>&nbsp;</div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"bottom-container flex-container\">\r\n                                            <div className=\"bottom-wrapper flex-container\">\r\n                                                <div className=\"product-price\">$ {product.item.cost} (USD)</div>\r\n                                                <div>\r\n                                                    <button className=\"action-button\" onClick={openModal}>\r\n                                                        ADD TO CART\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {modalShow && <CartModal onClose={closeModal} product={product} />}\r\n                                {warningModalShow && <WarningModal onClose={closeWarningModal} />}\r\n                            </div>\r\n                    ): (\r\n                        <div>No product to show</div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n","import '../assets/styles/CheckoutModal.css'\r\n\r\nfunction CheckoutModal(props) {\r\n    function getTodayDate() {\r\n        let date = new Date();\r\n        let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\n        return months[date.getMonth()] + \" \" + date.getDate() + \", \" + date.getFullYear();\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content-container\">\r\n                <div className=\"flex-container\">\r\n                    <div>\r\n                        <h1 className=\"title\">Thank you.</h1>\r\n                        <h3>Your order was completed successfully.</h3>\r\n                        <div className=\"flex-container\">\r\n                            <table className=\"order-info-table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Delivery (Max)</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>{getTodayDate()}</td>\r\n                                    <td>7 days</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button className=\"modal-close-button\" onClick={props.onClose}>CLOSE</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckoutModal;","import '../assets/styles/Cart.css'\r\nimport {useCart} from \"../context/CartContext\";\r\nimport CheckoutModal from \"../components/CheckoutModal\";\r\nimport {useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Cart() {\r\n    const history = useHistory();\r\n    const {cart, setCart} = useCart();\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    function removeProductFromCart(product) {\r\n        let currentCart = JSON.parse(JSON.stringify(cart));\r\n\r\n        currentCart.splice(getPositionOfProductInCart(currentCart, product), 1);\r\n\r\n        setCart(currentCart);\r\n    }\r\n\r\n    function getPositionOfProductInCart(cart, product) {\r\n        return cart.findIndex(p => p.product.itemId === product.itemId);\r\n    }\r\n\r\n    function checkOut() {\r\n        setModalShow(true);\r\n    }\r\n\r\n    function closeModal () {\r\n        setModalShow(false);\r\n        setCart([]);\r\n        history.push(`${process.env.PUBLIC_URL}/`);\r\n    }\r\n\r\n    function getFinalPrice() {\r\n        return cart.reduce((sum, p) => sum + p.totalPrice, 0);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex-container\">\r\n            {\r\n                cart.length ? (\r\n                    <div className=\"cart-table-container\">\r\n                        <table className=\"cart-table\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Product</th>\r\n                                <th>Quantity</th>\r\n                                <th>Price (USD)</th>\r\n                                <th>&nbsp;</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                cart.map(product => {\r\n                                    return (\r\n                                        <tr key={product.product.itemId}>\r\n                                            <td>\r\n                                                <img src={product.product.item.images.icon} alt=\"Avatar\" className=\"cart-item-img\" />\r\n                                                <h4>{product.product.item.name}</h4>\r\n                                            </td>\r\n                                            <td>\r\n                                                {product.quantity}\r\n                                            </td>\r\n                                            <td>\r\n                                                {product.totalPrice}\r\n                                            </td>\r\n                                            <td>\r\n                                                <button className=\"cart-table-btn\" onClick={() => removeProductFromCart(product.product)}>\r\n                                                    REMOVE\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <tr className=\"final-result-row\">\r\n                                <td colSpan=\"2\">Total</td>\r\n                                <td>{getFinalPrice()}</td>\r\n                                <td className=\"btn-container\">\r\n                                    <button className=\"cart-table-btn checkout-btn\" onClick={() => checkOut()}>\r\n                                        CHECKOUT\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <h1>You don't have any products in your cart.</h1>\r\n                    </div>\r\n                )\r\n            }\r\n            <div>\r\n                {modalShow && <CheckoutModal  onClose={closeModal} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n","import '../assets/styles/WarningModal.css'\r\nimport {useEffect} from \"react\";\r\nimport {useAuth} from \"../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction AuthMsgModal(props) {\r\n    const {authorized, setCredential, setAuthMsg} = useAuth();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', onRemoveModal);\r\n        return () => {\r\n            window.removeEventListener('click', onRemoveModal);\r\n        }\r\n    }, []);\r\n\r\n    function onRemoveModal() {\r\n        setCredential({});\r\n        setAuthMsg('');\r\n        goToHome();\r\n    }\r\n\r\n    function goToHome() {\r\n        if(authorized) {\r\n            history.push(`${process.env.PUBLIC_URL}/`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content-container\">\r\n                <div className=\"flex-container\">\r\n                    <div>\r\n                        <h2>{props.msg}</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthMsgModal;","import { useEffect, useState, createRef } from 'react'\r\nimport '../assets/styles/Auth.css'\r\nimport {useAuth} from \"../context/AuthContext\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport AuthMsgModal from \"../components/AuthMsgModal\";\r\n\r\nfunction Auth() {\r\n    let emailRef = createRef();\r\n    let passwordRef = createRef();\r\n    const [authType, setAuthType] = useState('Log In');\r\n    const {setCredential, setActionName, loading, setLoading, authMsg, setAuthMsg} = useAuth();\r\n\r\n    function changeAuthType(type) {\r\n        setAuthType(type);\r\n    }\r\n\r\n    function isValidObj(obj) {\r\n        return ((typeof obj === 'object' && Object.keys(obj).length && Object.values(obj).every(x => x != null && x !== '')));\r\n    }\r\n\r\n    function submit() {\r\n        let credential = {\r\n            email: emailRef.value,\r\n            password: passwordRef.value\r\n        }\r\n        if(isValidObj(credential)) {\r\n            setLoading(true);\r\n            setCredential({credential});\r\n            setActionName(getActionName(authType));\r\n        } else {\r\n            console.log(\"not a valid credential\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function getActionName(authType) {\r\n        return (authType === 'Log In' ? 'login' : 'register');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? (\r\n                    <LoadingSpinner />\r\n                ) : (\r\n                    <div>\r\n                        <div className=\"auth-main-container flex-container\">\r\n                            <div className=\"auth-wrapper\">\r\n                                <h2>{authType}</h2>\r\n                                <div className=\"auth-form log-in\">\r\n                                    <div className=\"auth-form-item-container\">\r\n                                        <div className=\"auth-form-label\">Email</div>\r\n                                        <input type=\"email\" name=\"email\" className=\"auth-form-input\" autoComplete=\"off\"\r\n                                               ref={node => emailRef = node} />\r\n                                    </div>\r\n                                    <div className=\"auth-form-item-container\">\r\n                                        <div className=\"auth-form-label\">Password</div>\r\n                                        <input type=\"password\" name=\"password\" className=\"auth-form-input\" autoComplete=\"off\"\r\n                                               ref={node => passwordRef = node} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <button className=\"auth-form-action-btn\" onClick={() => submit()}>SUBMIT</button>\r\n                                    </div>\r\n                                    {\r\n                                        authType === 'Log In' ? (\r\n                                            <div className=\"auth-msg\">\r\n                                                Don't have an account? Please\r\n                                                <span className=\"auth-highlighted-text\" onClick={() => changeAuthType('Sign Up')}>\r\n                                    Sign Up\r\n                                </span>\r\n                                            </div>\r\n                                        ):(\r\n                                            <div className=\"auth-msg\">\r\n                                                Already have an account? Please\r\n                                                <span className=\"auth-highlighted-text\" onClick={() => changeAuthType('Log In')}>\r\n                                    Log In\r\n                                </span>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            {authMsg !== '' && <AuthMsgModal msg={authMsg} />}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import ProductList from \"../components/ProductList\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport {useProductsApi} from \"../context/ProductsContextApi\";\r\n\r\nfunction Test() {\r\n    const {products, loading} = useProductsApi(\"upcoming\");\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? (\r\n                    <LoadingSpinner />\r\n                ) : (\r\n                    products ? (\r\n                        products.length ? (\r\n                            <ProductList list={products} />\r\n                        ) : (\r\n                            <h2>No products to show</h2>\r\n                        )\r\n                    ):(\r\n                        <div>Products not found</div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n","import './App.css';\nimport Nav from \"./components/Nav\";\nimport Home from \"./views/Home\";\nimport Popular from \"./views/Popular\";\nimport Upcoming from \"./views/Upcoming\";\nimport Product from \"./views/Product\";\nimport Cart from \"./views/Cart\";\nimport Auth from \"./views/Auth\";\nimport Test from \"./views/Test\";\n\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport {ProductsContextProvider} from \"./context/ProductsContextApi\";\nimport {CartContextProvider} from \"./context/CartContext\";\nimport {AuthContextProvider} from \"./context/AuthContext\"\n\nfunction App() {\n    const productType = \"all\";\n    const cartList = [];\n    const authorized = false;\n\n    return (\n        <AuthContextProvider status = {authorized}>\n            <ProductsContextProvider productType = {productType}>\n                <CartContextProvider cartList = {cartList}>\n                    <Router>\n                        <div className=\"App\">\n                            <Nav />\n                            <Switch>\n                                <Route path='/' exact component={Home} />\n                                <Route path='/popular' component={Popular} />\n                                <Route path='/upcoming' component={Upcoming} />\n                                <Route path='/product/:id' component={Product} />\n                                <Route path='/cart' component={Cart} />\n                                <Route path='/auth' component={Auth} />\n                                <Route path='/test' component={Test} />\n                            </Switch>\n                        </div>\n                    </Router>\n                </CartContextProvider>\n            </ProductsContextProvider>\n        </AuthContextProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}